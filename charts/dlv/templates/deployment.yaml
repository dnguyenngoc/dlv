apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dlv.fullname" . }}
  labels:
    {{- include "dlv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dlv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dlv.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dlv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: COLLECTORS_SPARK_ENABLED
              value: {{ .Values.collectors.spark.enabled | quote }}
            - name: COLLECTORS_SPARK_HISTORY_SERVER_URL
              value: {{ .Values.collectors.spark.historyServerUrl | quote }}
            - name: COLLECTORS_AIRFLOW_ENABLED
              value: {{ .Values.collectors.spark.enabled | quote }}
            - name: COLLECTORS_AIRFLOW_API_URL
              value: {{ .Values.collectors.airflow.apiUrl | quote }}
            - name: PROCESSOR_GRAPHDb_PROVIDER
              value: {{ .Values.processor.graphdb.provider | quote }}
            - name: PROCESSOR_UPDATE_INTERVAL
              value: {{ .Values.processor.updateInterval | quote }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: /data
      {{- if .Values.frontend.enabled }}
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: frontend
              containerPort: {{ .Values.service.frontendPort }}
              protocol: TCP
          env:
            - name: REACT_APP_API_URL
              value: "http://localhost:{{ .Values.service.port }}"
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
      {{- end }}
      volumes:
        - name: storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "dlv.fullname" . }}-pvc
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

